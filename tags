!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	sw_config_register.c	138;"	d	file:
A	sw_config_register.c	216;"	d	file:
A	sw_config_register.c	246;"	d	file:
A	sw_config_register.c	280;"	d	file:
A	sw_config_register.c	314;"	d	file:
A	sw_config_register.c	348;"	d	file:
A	sw_config_register.c	38;"	d	file:
A	sw_config_register.c	446;"	d	file:
A	sw_config_register.c	544;"	d	file:
A2A_2	parser.c	13;"	d	file:
ALL_TO_ALL	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
ARBITER_ALGORITHM	common.h	20;"	d
ARBI_DELAY	common.h	18;"	d
B	sw_config_register.c	139;"	d	file:
B	sw_config_register.c	217;"	d	file:
B	sw_config_register.c	247;"	d	file:
B	sw_config_register.c	281;"	d	file:
B	sw_config_register.c	315;"	d	file:
B	sw_config_register.c	349;"	d	file:
B	sw_config_register.c	39;"	d	file:
B	sw_config_register.c	447;"	d	file:
B	sw_config_register.c	545;"	d	file:
BUSWIDTH	common.h	23;"	d
C	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	e	enum:__anon16
C	sw_config_register.c	140;"	d	file:
C	sw_config_register.c	218;"	d	file:
C	sw_config_register.c	248;"	d	file:
C	sw_config_register.c	282;"	d	file:
C	sw_config_register.c	316;"	d	file:
C	sw_config_register.c	350;"	d	file:
C	sw_config_register.c	40;"	d	file:
C	sw_config_register.c	448;"	d	file:
C	sw_config_register.c	546;"	d	file:
D	sw_config_register.c	141;"	d	file:
D	sw_config_register.c	219;"	d	file:
D	sw_config_register.c	249;"	d	file:
D	sw_config_register.c	283;"	d	file:
D	sw_config_register.c	317;"	d	file:
D	sw_config_register.c	351;"	d	file:
D	sw_config_register.c	41;"	d	file:
D	sw_config_register.c	449;"	d	file:
D	sw_config_register.c	547;"	d	file:
DATELINE0	router_algo_user.c	8;"	d	file:
DATELINE0	sw_algo_user.c	15;"	d	file:
DAVI_TOR	nic_algo_user.c	13;"	d	file:
DEMENSION1	router_algo_user.c	7;"	d	file:
DEMENSION1	sw_algo_user.c	14;"	d	file:
DMAEND	common.h	14;"	d
DestPort	packet.h	/^      usi	     	DestPort;                            \/* In sw or nic destination port number *\/$/;"	m	struct:flbfly_packet
DestPort	packet.h	/^    usi     	DestPort;                            \/* In sw or nic destination port number *\/$/;"	m	struct:hld_dms_packet
DestPort	packet.h	/^    usi     	DestPort;                            \/* In sw or nic destination port number *\/$/;"	m	struct:src_addr_packet
E	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	e	enum:__anon16
E	sw_config_register.c	142;"	d	file:
E	sw_config_register.c	220;"	d	file:
E	sw_config_register.c	250;"	d	file:
E	sw_config_register.c	284;"	d	file:
E	sw_config_register.c	318;"	d	file:
E	sw_config_register.c	352;"	d	file:
E	sw_config_register.c	42;"	d	file:
E	sw_config_register.c	450;"	d	file:
E	sw_config_register.c	548;"	d	file:
ERROR	universal_nic.h	16;"	d
ERROR	universal_router.h	16;"	d
ERROR	universal_sw.h	16;"	d
FALSE	universal_nic.h	14;"	d
FALSE	universal_router.h	17;"	d
FALSE	universal_sw.h	17;"	d
FAT_TREE	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
FC_INTERLEAVE	universal_router.h	14;"	d
FC_INTERLEAVE	universal_sw.h	14;"	d
FLBFLY	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
FLOW_CONTROL	universal_nic.h	24;"	d
FLOW_CONTROL	universal_router.h	22;"	d
FLOW_CONTROL	universal_sw.h	22;"	d
FTREE_A2A	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
GROUP_NUM	universal_router.h	19;"	d
GROUP_NUM	universal_sw.h	19;"	d
HELP	hoptions.c	/^enum { HELP = 300, VERSION };$/;"	e	enum:__anon1	file:
HPPNETSIM_OPTIONS_H	hoptions.h	11;"	d
INNER_BIT	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
INNER_HOT	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
INNER_RANDOM	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
INNER_SHUF	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
INNER_UNIFORM	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
INV_THREAD_NUM	hoptions.h	36;"	d
LINE_DELAY	common.h	15;"	d
LOCALITY	nic_algo_user.c	12;"	d	file:
MAX_FLY	sw_config_register.h	7;"	d
MAX_LEVEL_PORT	parser.h	8;"	d
MAX_NIC_PORT	parser.h	7;"	d
MAX_STAGE	packet.h	8;"	d
MAX_SW_PORT	parser.h	6;"	d
MAX_TIME	common.h	25;"	d
MESH	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
MESH_ADAPTIVE_2	nic_algo_user.c	9;"	d	file:
MESH_ADAPTIVE_2	sw_algo_user.c	13;"	d	file:
MTU	universal_nic.h	17;"	d
N	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	e	enum:__anon16
NETSIM_PARSER_H	parser.h	2;"	d
NETWORK_TYPE_FTREE	macro_select.h	1;"	d
NET_BARRIER	common.h	/^	NET_BARRIER,$/;"	e	enum:pkt_type_desc
NET_FLOWCONTROL	common.h	/^	NET_FLOWCONTROL,$/;"	e	enum:pkt_type_desc
NET_MULTICAST	common.h	/^	NET_MULTICAST,$/;"	e	enum:pkt_type_desc
NET_Q_LEN	common.h	22;"	d
NET_UNDEF	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
NET_UNICAST	common.h	/^	NET_UNICAST,$/;"	e	enum:pkt_type_desc
NIC_DELAY	universal_nic.h	19;"	d
NIC_FUNC_NUM	universal_nic.h	11;"	d
NIC_XPORT_NUM	universal_nic.h	10;"	d
NIC_XVC_NUM	universal_nic.h	12;"	d
OK	universal_nic.h	15;"	d
OK	universal_router.h	15;"	d
OK	universal_sw.h	15;"	d
PARSE_BOOL	parser.c	120;"	d	file:
PARSE_INT	parser.c	131;"	d	file:
PARSE_STRING	parser.c	138;"	d	file:
RECV_DELAY	common.h	16;"	d
ROUTER_DELAY	universal_router.h	24;"	d
ROUTER_FUNC_NUM	universal_router.h	12;"	d
ROUTER_XPORT_NUM	universal_router.h	11;"	d
ROUTER_XVC_NUM	universal_router.h	13;"	d
ROUT_DELAY	common.h	17;"	d
S	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	e	enum:__anon16
SCRIPT_MTU	universal_nic.h	21;"	d
SFLBFLY	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
SW_CONFIG_REGISTER	sw_config_register.h	2;"	d
SW_DELAY	universal_sw.h	24;"	d
SW_FUNC_NUM	universal_sw.h	12;"	d
SW_XPORT_NUM	universal_sw.h	11;"	d
SW_XVC_NUM	universal_sw.h	13;"	d
TC	packet.h	/^      usi    	 	TC;				     \/* Virtural Channel number *\/$/;"	m	struct:flbfly_packet
TC	packet.h	/^    usi     	TC;				     \/* Virtural Channel number *\/$/;"	m	struct:hld_dms_packet
TC	packet.h	/^    usi     	TC;				     \/* Virtural Channel number *\/$/;"	m	struct:src_addr_packet
THRESHOLD	universal_nic.h	22;"	d
TORFT	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
TORUS	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
TRACE_FILE	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	e	enum:__anon3
TRACE_OPEN	universal_nic.h	23;"	d
TRACE_OPEN	universal_router.h	21;"	d
TRACE_OPEN	universal_sw.h	21;"	d
TRANS	nic_algo_user.c	10;"	d	file:
TRANS_DELAY	common.h	19;"	d
TRUE	universal_nic.h	13;"	d
TRUE	universal_router.h	18;"	d
TRUE	universal_sw.h	18;"	d
UNIVERSAL	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
VC_SHEME	common.h	21;"	d
VERSION	hoptions.c	/^enum { HELP = 300, VERSION };$/;"	e	enum:__anon1	file:
VOQ	nic_algo_user.c	11;"	d	file:
VOQ	router_algo_user.c	9;"	d	file:
VOQ	sw_algo_user.c	16;"	d	file:
VTORFT	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	e	enum:__anon2
W	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	e	enum:__anon16
X	packet.h	10;"	d
Y	packet.h	11;"	d
Z	packet.h	12;"	d
_COMMEN_H	common.h	8;"	d
_FUNDCL_NIC	fundcl_nic.h	2;"	d
_FUNDCL_ROUTER	fundcl_router.h	2;"	d
_FUNDCL_SW	fundcl_sw.h	2;"	d
_PACKET_H	packet.h	2;"	d
_ROUTER_H	universal_router.h	6;"	d
_SW_H	universal_sw.h	6;"	d
_UNIVERSAL_NIC_H	universal_nic.h	2;"	d
a_dest	packet.h	/^    usi		a_dest;$/;"	m	struct:hld_dms_packet
add_up_cnt	packet.h	/^      usi		add_up_cnt;			     \/* Accumlation hop count for the packet *\/$/;"	m	struct:flbfly_packet
add_up_cnt	packet.h	/^    usi		add_up_cnt;			     \/* Accumlation hop count for the packet *\/$/;"	m	struct:hld_dms_packet
add_up_cnt	packet.h	/^    usi		add_up_cnt;			     \/* Accumlation hop count for the packet *\/$/;"	m	struct:src_addr_packet
adjust_recv_fifo_tick	router_algo_frame.c	/^static inline void adjust_recv_fifo_tick(struct router *router, num_t vc, id_t src_id, id_t dst, htime_t tick, len_t len, bool successful)$/;"	f	file:
adjust_recv_fifo_tick	sw_algo_frame.c	/^static inline void adjust_recv_fifo_tick(struct sw *sw, num_t vc, id_t src_id, id_t dst, htime_t tick, len_t len, bool successful)$/;"	f	file:
all_to_all_param	parser.c	/^}all_to_all_param;$/;"	v	typeref:struct:__anon13	file:
arrive_tick	common.h	/^	htime_t  arrive_tick;              \/* Tick for this packet just arrived *\/$/;"	m	struct:fc_pkth_desc
arrive_tick	packet.h	/^      htime_t   	arrive_tick;                         \/* Tick for this packet just arrived *\/$/;"	m	struct:flbfly_packet
arrive_tick	packet.h	/^    htime_t  	arrive_tick;                         \/* Tick for this packet just arrived *\/$/;"	m	struct:hld_dms_packet
arrive_tick	packet.h	/^    htime_t  	arrive_tick;                         \/* Tick for this packet just arrived *\/$/;"	m	struct:src_addr_packet
auto_get_netpkth	common.h	61;"	d
auto_get_pkth	common.h	56;"	d
avg_delay	universal_router.h	/^       float avg_delay;$/;"	m	struct:router_port
avg_delay	universal_sw.h	/^       float avg_delay;$/;"	m	struct:sw_port
b_dest	packet.h	/^    usi		b_dest;$/;"	m	struct:hld_dms_packet
barrier_enable	universal_router.h	/^	bool  barrier_enable;$/;"	m	struct:router
barrier_enable	universal_sw.h	/^	bool  barrier_enable;$/;"	m	struct:sw
barrier_priority_en	universal_router.h	/^	bool  barrier_priority_en;$/;"	m	struct:router
barrier_priority_en	universal_sw.h	/^	bool  barrier_priority_en;$/;"	m	struct:sw
bus_width	parser.h	/^    int bus_width;			\/\/bus width$/;"	m	struct:__anon18
bus_width	parser.h	/^    int bus_width;$/;"	m	struct:__anon19
bus_width	parser.h	/^    int bus_width;$/;"	m	struct:__anon20
bus_width	universal_nic.h	/^   num_t bus_width;$/;"	m	struct:nic
bus_width	universal_router.h	/^	int bus_width;$/;"	m	struct:router
bus_width	universal_sw.h	/^	int bus_width;$/;"	m	struct:sw
c_dest	packet.h	/^    usi		c_dest;$/;"	m	struct:hld_dms_packet
clk	common.h	/^	htime_t	clk;$/;"	m	struct:universal_unicast_pkth_desc
cmap	parser.c	/^int *cmap  = NULL;	\/\/connetion map of torus$/;"	v
cmb_cnt	universal_router.h	/^	unsigned int cmb_cnt[ROUTER_XPORT_NUM];$/;"	m	struct:router
cmb_cnt	universal_sw.h	/^	unsigned int cmb_cnt[SW_XPORT_NUM];$/;"	m	struct:sw
column	parser.c	/^int *column = NULL;\/\/column$/;"	v
confg_from_file	parser.c	/^void confg_from_file()$/;"	f
confg_topo_alltoall	parser.c	/^void confg_topo_alltoall()$/;"	f
confg_topo_flbfly	parser.c	/^void confg_topo_flbfly()$/;"	f
confg_topo_ftree	parser.c	/^void confg_topo_ftree()$/;"	f
confg_topo_mesh	parser.c	/^void confg_topo_mesh()$/;"	f
confg_topo_sflbfly	parser.c	/^void confg_topo_sflbfly()$/;"	f
confg_topo_torft	parser.c	/^void confg_topo_torft()$/;"	f
confg_topo_torus	parser.c	/^void confg_topo_torus()$/;"	f
confg_topo_universal	parser.c	/^void confg_topo_universal()$/;"	f
confg_topo_vtorft	parser.c	/^void confg_topo_vtorft()$/;"	f
connect_alltoall_node	parser.c	/^void connect_alltoall_node(int **map, int nr_sw, int sp_num,int num_nic,int np_num)$/;"	f
connect_flevel_node	parser.c	/^void connect_flevel_node(levnd_desc_t *lres,int sw_res,int nic_res,int nr_sw,int nr_nic,int **map,int sp_num,int np_num)$/;"	f
connect_level_node	parser.c	/^void connect_level_node(levnd_desc_t *lres1, levnd_desc_t *lres2, int whole_id, int nr_comp, int col, int level, int **map)$/;"	f
counter_nic	parser.c	/^int counter_nic;$/;"	v
counter_sw	parser.c	/^int counter_sw;$/;"	v
credit	common.h	/^	num_t     credit;                  \/* Credit value for arrive tick*\/$/;"	m	struct:fc_pkth_desc
credit	universal_nic.h	/^   num_t   credit[NIC_XVC_NUM];                          \/* remote credit for each VC *\/$/;"	m	struct:nic_port
credit	universal_router.h	/^       num_t   credit[ROUTER_XVC_NUM];                            \/* remote credit for each VC *\/$/;"	m	struct:router_port
credit	universal_sw.h	/^       num_t   credit[SW_XVC_NUM];                            \/* remote credit for each VC *\/$/;"	m	struct:sw_port
credit_for_increment	universal_nic.h	/^   struct nic_mlist credit_for_increment[NIC_XVC_NUM];   \/* credit from remote to update local credit *\/$/;"	m	struct:nic_port	typeref:struct:nic_port::nic_mlist
credit_for_increment	universal_router.h	/^       struct router_mlist credit_for_increment[ROUTER_XVC_NUM];      \/* credit from remote to update local credit *\/$/;"	m	struct:router_port	typeref:struct:router_port::router_mlist
credit_for_increment	universal_sw.h	/^       struct sw_mlist credit_for_increment[SW_XVC_NUM];      \/* credit from remote to update local credit *\/$/;"	m	struct:sw_port	typeref:struct:sw_port::sw_mlist
d7k_route_table	sw_algo_user.c	/^unsigned int d7k_route_table[8]=$/;"	v
d_dest	packet.h	/^    usi		d_dest;$/;"	m	struct:hld_dms_packet
dataline	sw_config_register.h	/^    bool dataline[5];$/;"	m	struct:__anon21
dataline	sw_config_register.h	/^    bool dataline[5];$/;"	m	struct:__anon24
direct_t	parser.h	/^typedef enum {C=0, E, S, W, N} direct_t;$/;"	t	typeref:enum:__anon16
direction	parser.c	/^int *direction = NULL;	\/\/port represent the directions$/;"	v
dms	parser.c	/^int *dms = NULL;	\/\/dimension size$/;"	v
dms_drt_find	sw_algo_user.c	/^void dms_drt_find(struct sw_port *port,unicast_pkth_t *netpkth, int current_port)$/;"	f
do_stat	universal_nic.h	/^   bool do_stat;$/;"	m	struct:nic
drt	packet.h	/^      usi		drt[10];$/;"	m	struct:flbfly_packet
dst_addr	common.h	/^	mem_addr_t dst_addr;$/;"	m	struct:universal_unicast_pkth_desc
dst_id	universal_nic.h	/^   id_t dst_id;                                          \/* hcommu lib dst_id *\/$/;"	m	struct:nic_port
dst_id	universal_router.h	/^       id_t dst_id;                                           \/* hcommu lib dst_id *\/$/;"	m	struct:router_port
dst_id	universal_sw.h	/^       id_t dst_id;                                           \/* hcommu lib dst_id *\/$/;"	m	struct:sw_port
e_dest	packet.h	/^    usi		e_dest;$/;"	m	struct:hld_dms_packet
escape	packet.h	/^      usi		escape;	$/;"	m	struct:flbfly_packet
escape	packet.h	/^    usi		escape;	$/;"	m	struct:hld_dms_packet
escape	packet.h	/^    usi		escape;	$/;"	m	struct:src_addr_packet
esp_vc	sw_config_register.h	/^    int esp_vc[5];$/;"	m	struct:__anon21
esp_vc	sw_config_register.h	/^    int esp_vc[5];$/;"	m	struct:__anon24
fc_pkth_desc	common.h	/^typedef struct fc_pkth_desc{$/;"	s
fc_pkth_t	common.h	/^} fc_pkth_t;$/;"	t	typeref:struct:fc_pkth_desc
fifo_depth	parser.c	/^    int fifo_depth;$/;"	m	struct:__anon5	file:
fifo_depth	parser.h	/^    int fifo_depth;			\/\/queue depth$/;"	m	struct:__anon18
fifo_depth	parser.h	/^    int fifo_depth;$/;"	m	struct:__anon19
fifo_depth	parser.h	/^    int fifo_depth;$/;"	m	struct:__anon20
fifo_depth	universal_nic.h	/^   num_t fifo_depth;$/;"	m	struct:nic
fifo_threshold	universal_router.h	/^	int fifo_threshold;$/;"	m	struct:router
fifo_threshold	universal_sw.h	/^	int fifo_threshold;$/;"	m	struct:sw
fifo_used	universal_router.h	/^       float fifo_used[ROUTER_XVC_NUM];                           \/\/fifo runtime capacity$/;"	m	struct:router_port
fifo_used	universal_sw.h	/^       float fifo_used[SW_XVC_NUM];                           \/\/fifo runtime capacity$/;"	m	struct:sw_port
file1	parser.c	/^    char *file1;$/;"	m	struct:__anon14	file:
file2	parser.c	/^    char *file2;$/;"	m	struct:__anon14	file:
file_mesh	parser.c	/^    char *file_mesh;$/;"	m	struct:__anon11	file:
file_sflbfly	parser.c	/^    char *file_sflbfly;$/;"	m	struct:__anon10	file:
file_torus	parser.c	/^    char *file_torus;$/;"	m	struct:__anon12	file:
fill_fc_packet	router_algo_frame.c	/^static inline void fill_fc_packet(void *pkt, num_t vc, htime_t tick, len_t credit)$/;"	f	file:
fill_fc_packet	sw_algo_frame.c	/^static inline void fill_fc_packet(void *pkt, num_t vc, htime_t tick, len_t credit)$/;"	f	file:
final	packet.h	/^      num_t     	final;$/;"	m	struct:flbfly_packet
final	packet.h	/^    num_t    	final;$/;"	m	struct:hld_dms_packet
final	packet.h	/^    num_t    	final;$/;"	m	struct:src_addr_packet
find_direction	sw_algo_user.c	/^int find_direction(sw_config_register *rgs, unicast_pkth_t *netpkth)$/;"	f
find_direction	sw_algo_user.c	/^int find_direction(unicast_pkth_t *pkth)$/;"	f
find_max	parser.c	/^int find_max(int arr[],int size)$/;"	f
find_nic_port	parser.c	/^void find_nic_port(int nport,int cmap[], int *num_unused, int port_unused[])$/;"	f
find_nic_total	parser.c	/^int find_nic_total(int** arr,int size1,int size2)$/;"	f
flattened_bfly_param	parser.c	/^} flattened_bfly_param;$/;"	v	typeref:struct:__anon9	file:
flbfly_packet	packet.h	/^typedef struct flbfly_packet{$/;"	s
flbfly_packet_t	packet.h	/^}flbfly_packet_t;$/;"	t	typeref:struct:flbfly_packet
fp	universal_nic.h	/^   FILE *fp;$/;"	m	struct:nic
fp	universal_router.h	/^	FILE *fp;$/;"	m	struct:router
fp	universal_sw.h	/^	FILE *fp;$/;"	m	struct:sw
frequency	parser.h	/^    int frequency;			\/\/one cycle time, unit (ns)$/;"	m	struct:__anon18
frequency	parser.h	/^    int frequency;$/;"	m	struct:__anon19
frequency	parser.h	/^    int frequency;$/;"	m	struct:__anon20
frequency	universal_nic.h	/^   num_t frequency;					 \/*one cycle time, unit (ns) *\/$/;"	m	struct:nic
frequency	universal_router.h	/^	int frequency;$/;"	m	struct:router
frequency	universal_sw.h	/^	int frequency;$/;"	m	struct:sw
ftree_a2a_param	parser.c	/^}ftree_a2a_param;$/;"	v	typeref:struct:__anon15	file:
ftree_param	parser.c	/^} ftree_param;$/;"	v	typeref:struct:__anon6	file:
ftree_task_partition	parser.c	/^void ftree_task_partition()$/;"	f
g_pkt_length	parser.c	/^int g_pkt_length;$/;"	v
get_drt_num	sw_algo_user.c	/^int get_drt_num(unsigned num)$/;"	f
get_hnet_opt	hoptions.c	/^void get_hnet_opt(int argc, char *argv[])$/;"	f
get_map_rank	parser.c	/^int get_map_rank(int *map, int size, int find)$/;"	f
get_map_val	parser.c	/^int get_map_val(int *map, int size, int rank ,int find)$/;"	f
get_net_type	parser.c	/^static bool get_net_type(xmlDocPtr doc, xmlNodePtr cur)$/;"	f	file:
get_pkt_buflen	common.h	/^static inline len_t get_pkt_buflen(void *pkt)$/;"	f
get_pkt_tick	common.h	/^static inline htime_t get_pkt_tick(void *pkt)$/;"	f
get_self_param	parser.c	/^bool get_self_param(const char* file_name)$/;"	f
get_target_param	parser.c	/^bool get_target_param(const char *filename)$/;"	f
global_routernum	parser.c	/^int global_routernum = 0;$/;"	v
global_swnum	parser.c	/^int global_swnum = 0;$/;"	v
guide_bits	packet.h	/^    usi		guide_bits;$/;"	m	struct:hld_dms_packet
guide_bits_compute	sw_algo_user.c	/^void guide_bits_compute(sw_config_register *rgs, unicast_pkth_t *netpkth)$/;"	f
head2pkt	common.h	/^static inline pkt_ptr_t head2pkt(struct pkt_list *list)$/;"	f
hld_dms_packet	packet.h	/^typedef struct hld_dms_packet{$/;"	s
hld_dms_packet_t	packet.h	/^}hld_dms_packet_t;$/;"	t	typeref:struct:hld_dms_packet
hnet_opt	hoptions.c	/^hnet_opt_t hnet_opt = {$/;"	v
hnet_opt_t	hoptions.h	/^} hnet_opt_t;$/;"	t	typeref:struct:__anon4
hop_cnt	packet.h	/^    usi     	hop_cnt;$/;"	m	struct:src_addr_packet
hop_cnt	universal_nic.h	/^   float hop_cnt;$/;"	m	struct:nic
id	universal_nic.h	/^   id_t  id;$/;"	m	struct:nic
id	universal_router.h	/^	compt_id_t id;$/;"	m	struct:router
id	universal_sw.h	/^	compt_id_t id;$/;"	m	struct:sw
index	parser.h	/^    int index[MAX_LEVEL_PORT];		\/\/port's owner$/;"	m	struct:levnd_desc_t
index	parser.h	/^    unsigned int index;			\/\/componet ID number$/;"	m	struct:__anon18
index	parser.h	/^    unsigned int index;$/;"	m	struct:__anon19
index	parser.h	/^    unsigned int index;$/;"	m	struct:__anon20
index	universal_nic.h	/^   unsigned int index;                                            \/* index of the NIC among all NICs; starts at 0 *\/$/;"	m	struct:nic
index	universal_router.h	/^	unsigned long index;$/;"	m	struct:router
index	universal_sw.h	/^	unsigned long index;$/;"	m	struct:sw
init_unicast_pkt	nic_algo_user.c	/^void init_unicast_pkt(struct nic * nic, unicast_pkth_t *netpkth, int current_vc)$/;"	f
inject_rate	parser.c	/^    int inject_rate;$/;"	m	struct:__anon5	file:
inject_rate	parser.c	/^int inject_rate;$/;"	v
inner_id	parser.h	/^    int inner_id;			\/\/level node inner number$/;"	m	struct:levnd_desc_t
inner_id	sw_config_register.h	/^    int  inner_id;$/;"	m	struct:__anon21
inner_id	sw_config_register.h	/^    int  inner_id;$/;"	m	struct:__anon24
input_bytes	universal_nic.h	/^   float input_bytes;$/;"	m	struct:nic
input_bytes	universal_router.h	/^	float input_bytes; 				      \/\/bytes received $/;"	m	struct:router
input_bytes	universal_router.h	/^       float input_bytes;$/;"	m	struct:router_port
input_bytes	universal_sw.h	/^	float input_bytes; 				      \/\/bytes received $/;"	m	struct:sw
input_bytes	universal_sw.h	/^       float input_bytes;$/;"	m	struct:sw_port
input_cnt	universal_nic.h	/^   float input_cnt;$/;"	m	struct:nic
input_delay	universal_nic.h	/^   float input_delay;$/;"	m	struct:nic
input_stat_tick	universal_router.h	/^	float input_stat_tick;$/;"	m	struct:router
input_stat_tick	universal_sw.h	/^	float input_stat_tick;$/;"	m	struct:sw
input_stat_time	universal_router.h	/^	float input_stat_time;$/;"	m	struct:router
input_stat_time	universal_sw.h	/^	float input_stat_time;$/;"	m	struct:sw
judge_reach_destination	nic_algo_user.c	/^bool judge_reach_destination(struct nic *nic, unicast_pkth_t* netpkth, id_t src_port)$/;"	f
judge_vc	nic_algo_user.c	/^bool judge_vc(int vc)$/;"	f
k	parser.c	/^    int k;$/;"	m	struct:__anon9	file:
k_mode	hoptions.h	/^    simk_mode_t k_mode;$/;"	m	struct:__anon4
la_tick	universal_nic.h	/^   htime_t la_tick;                                      \/* out put tick will not less than this tick, it records most recently received packet's arrival tick. *\/$/;"	m	struct:nic_port
la_tick	universal_router.h	/^       htime_t la_tick;                                       \/* out put tick will not less than this tick, it records most recently received packet's arrival tick. *\/$/;"	m	struct:router_port
la_tick	universal_sw.h	/^       htime_t la_tick;                                       \/* out put tick will not less than this tick, it records most recently received packet's arrival tick. *\/$/;"	m	struct:sw_port
last_stat_tick	universal_nic.h	/^   htime_t last_stat_tick;$/;"	m	struct:nic
last_trace_time	universal_router.h	/^	htime_t last_trace_time;$/;"	m	struct:router
last_trace_time	universal_sw.h	/^	htime_t last_trace_time;$/;"	m	struct:sw
layer_number	parser.c	/^    int layer_number;$/;"	m	struct:__anon8	file:
lev_num	parser.c	/^int *lev_num =NULL;\/\/every level sw number$/;"	v
lev_res	parser.c	/^levnd_desc_t **lev_res = NULL;$/;"	v
level	parser.h	/^    int level;				\/\/the topology level number, used for universal topology $/;"	m	struct:levnd_desc_t
levnd_desc_t	parser.h	/^typedef struct levnd_desc_t$/;"	s
levnd_desc_t	parser.h	/^}levnd_desc_t;$/;"	t	typeref:struct:levnd_desc_t
list	common.h	/^	struct list_head list;$/;"	m	struct:pkt_list	typeref:struct:pkt_list::list_head
local	parser.h	/^    int local;		\/\/local port number, port's own number$/;"	m	struct:__anon17
local_id	universal_nic.h	/^   id_t local_id;                                        \/* hcommu lib local_id *\/$/;"	m	struct:nic_port
local_id	universal_router.h	/^       id_t local_id;                                         \/* hcommu lib local_id *\/$/;"	m	struct:router_port
local_id	universal_sw.h	/^       id_t local_id;                                         \/* hcommu lib local_id *\/$/;"	m	struct:sw_port
m	parser.c	/^    int m;	\/\/port number$/;"	m	struct:__anon12	file:
m	parser.c	/^    int m;	\/\/port number$/;"	m	struct:__anon14	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon10	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon11	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon13	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon15	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon6	file:
m	parser.c	/^    int m;$/;"	m	struct:__anon7	file:
m	parser.h	/^    int m;				\/\/information for nic, it can be switch port number or others$/;"	m	struct:__anon18
m	parser.h	/^    int m;				\/\/sw port number$/;"	m	struct:__anon19
m	parser.h	/^    int m;$/;"	m	struct:__anon20
m	universal_nic.h	/^   int m;$/;"	m	struct:nic
main	main.c	/^int main(int argc, char *argv[])$/;"	f
make_alltoall_matrix	parser.c	/^void make_alltoall_matrix(int component, int spn)$/;"	f
make_atoamatrix	parser.c	/^void make_atoamatrix(int ***map,int j)$/;"	f
make_outside_torus	parser.c	/^void make_outside_torus(levnd_desc_t *levs, int dimensions,int ln_port_num,int topo_level)$/;"	f
make_topo	parser.c	/^void make_topo()$/;"	f
matrix_map	parser.c	/^int **matrix_map = NULL;\/\/teporary$/;"	v
mem_addr_t	common.h	13;"	d
mem_addr_t	packet.h	9;"	d
mesh_adp2_routing	sw_algo_user.c	/^void mesh_adp2_routing(struct sw_port * port, unicast_pkth_t* netpkth, sw_config_register *rgs,int current_port)$/;"	f
mesh_adp_routing	sw_algo_user.c	/^void mesh_adp_routing(struct sw_port * port, unicast_pkth_t* netpkth, sw_config_register *rgs,int current_port)$/;"	f
mesh_find_direction	sw_algo_user.c	/^int mesh_find_direction(unicast_pkth_t *netpkth)$/;"	f
mesh_guide_bits_compute	sw_algo_user.c	/^void mesh_guide_bits_compute(sw_config_register *rgs, unicast_pkth_t *netpkth)$/;"	f
mesh_param	parser.c	/^} mesh_param;$/;"	v	typeref:struct:__anon11	file:
mesh_read_file	parser.c	/^void mesh_read_file(FILE * fcfg)$/;"	f
multicast_enable	universal_router.h	/^	bool  multicast_enable;$/;"	m	struct:router
multicast_enable	universal_sw.h	/^	bool  multicast_enable;$/;"	m	struct:sw
multicast_routing	universal_router.h	/^	int   multicast_routing;$/;"	m	struct:router
multicast_routing	universal_sw.h	/^	int   multicast_routing;$/;"	m	struct:sw
n	parser.c	/^    int n;	\/\/dimensions$/;"	m	struct:__anon12	file:
n	parser.c	/^    int n;	\/\/dimensions$/;"	m	struct:__anon14	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon10	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon11	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon13	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon15	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon6	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon7	file:
n	parser.c	/^    int n;$/;"	m	struct:__anon9	file:
n	parser.h	/^    int n;				\/\/it can be topology level number, or others	$/;"	m	struct:__anon18
n	parser.h	/^    int n;                              \/\/it can be topology level number, or others	$/;"	m	struct:__anon19
n	parser.h	/^    int n;$/;"	m	struct:__anon20
n	universal_nic.h	/^   int n;$/;"	m	struct:nic
n	universal_router.h	/^	int n;$/;"	m	struct:router
n	universal_sw.h	/^	int n;$/;"	m	struct:sw
nb_port_num	universal_nic.h	/^   num_t  nb_port_num;                                   \/*Port connected to net bridge*\/$/;"	m	struct:nic
net_param	parser.c	/^} net_param;$/;"	v	typeref:struct:__anon5	file:
net_type	hoptions.h	/^    net_type_t net_type;$/;"	m	struct:__anon4
net_type_t	hoptions.h	/^typedef enum { NET_UNDEF, FAT_TREE,TORFT,VTORFT,FLBFLY,SFLBFLY, MESH,TORUS,ALL_TO_ALL,FTREE_A2A, UNIVERSAL} net_type_t; $/;"	t	typeref:enum:__anon2
netpkth	common.h	/^	unicast_pkth_t netpkth;$/;"	m	struct:universal_unicast_pkth_desc
netpkth_to_netpkt	common.h	67;"	d
nic	universal_nic.h	/^   struct nic *nic;$/;"	m	struct:nic_port	typeref:struct:nic_port::nic
nic	universal_nic.h	/^struct nic {$/;"	s
nic_bus_width	parser.c	/^    int nic_bus_width;$/;"	m	struct:__anon5	file:
nic_data_init	universal_nic.c	/^static void nic_data_init(nic_desc_t * nic_desc, struct nic *nic)$/;"	f	file:
nic_desc	parser.c	/^nic_desc_t *nic_desc = NULL;$/;"	v
nic_desc_t	parser.h	/^} nic_desc_t;$/;"	t	typeref:struct:__anon18
nic_frequency	parser.c	/^    int nic_frequency;$/;"	m	struct:__anon5	file:
nic_get_nexthop_portvc	nic_algo_user.c	/^void nic_get_nexthop_portvc(struct nic *nic, unicast_pkth_t *pkth)$/;"	f
nic_init	universal_nic.c	/^void nic_init(void *nic_desc_ptr)$/;"	f
nic_mlist	universal_nic.h	/^struct nic_mlist {$/;"	s
nic_num	parser.c	/^int nic_num;$/;"	v
nic_port	universal_nic.h	/^struct nic_port {$/;"	s
nic_port_num	universal_nic.h	/^   num_t  nic_port_num;                                  \/*Number of interfaces with NIC\/SW *\/$/;"	m	struct:nic
nic_vc_num	universal_nic.h	/^   int nic_vc_num;$/;"	m	struct:nic_port
nic_vc_num	universal_nic.h	/^   num_t  nic_vc_num;                                    \/*vc number*\/$/;"	m	struct:nic
nic_vcnum	parser.c	/^    int nic_vcnum;$/;"	m	struct:__anon5	file:
nicnum	parser.c	/^    int nicnum;$/;"	m	struct:__anon5	file:
nicnum	parser.h	/^    int nicnum;				\/\/nic port number$/;"	m	struct:__anon18
num_component	parser.c	/^int *num_component = NULL;\/\/row$/;"	v
o_atoa	parser.c	/^    bool o_atoa;$/;"	m	struct:__anon14	file:
o_component	parser.c	/^    int o_component;$/;"	m	struct:__anon14	file:
o_flbfly	parser.c	/^    bool o_flbfly;$/;"	m	struct:__anon14	file:
o_torus	parser.c	/^    bool o_torus;$/;"	m	struct:__anon14	file:
output_bytes	universal_nic.h	/^   float output_bytes;$/;"	m	struct:nic
output_bytes	universal_router.h	/^	float output_bytes; 			              \/\/bytes transmitted$/;"	m	struct:router
output_bytes	universal_router.h	/^       float output_bytes;$/;"	m	struct:router_port
output_bytes	universal_sw.h	/^	float output_bytes; 			              \/\/bytes transmitted$/;"	m	struct:sw
output_bytes	universal_sw.h	/^       float output_bytes;$/;"	m	struct:sw_port
output_cnt	universal_nic.h	/^   float output_cnt;$/;"	m	struct:nic
outside	parser.h	/^    struct levnd_desc_t *outside;	\/\/point to the upper level $/;"	m	struct:levnd_desc_t	typeref:struct:levnd_desc_t::levnd_desc_t
parse_all_to_all_topo	parser.c	/^bool parse_all_to_all_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_flattened_bfly_topo	parser.c	/^bool parse_flattened_bfly_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_ftree_a2a_topo	parser.c	/^bool parse_ftree_a2a_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_ftree_topo	parser.c	/^bool parse_ftree_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_mesh_topo	parser.c	/^bool parse_mesh_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_nic_sw_param	parser.c	/^bool parse_nic_sw_param(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_sflbfly_topo	parser.c	/^bool parse_sflbfly_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_torft_topo	parser.c	/^bool parse_torft_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_torus_topo	parser.c	/^bool parse_torus_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_universal_topo	parser.c	/^bool parse_universal_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
parse_vtorft_topo	parser.c	/^bool parse_vtorft_topo(xmlDocPtr doc, xmlNodePtr nodeptr)$/;"	f
pkt_cnt	universal_router.h	/^       float  pkt_cnt; $/;"	m	struct:router_port
pkt_cnt	universal_sw.h	/^       float  pkt_cnt; $/;"	m	struct:sw_port
pkt_delay	packet.h	/^      route_t 		pkt_delay[2];			     \/* input delay information! *\/$/;"	m	struct:flbfly_packet
pkt_delay	packet.h	/^    route_t	pkt_delay[2];			     \/* input delay information! *\/$/;"	m	struct:hld_dms_packet
pkt_delay	packet.h	/^    usi		pkt_delay[2];			     \/* input delay information! *\/$/;"	m	struct:src_addr_packet
pkt_delay	universal_router.h	/^       float pkt_delay;                                       \/\/packet transmit delay$/;"	m	struct:router_port
pkt_delay	universal_sw.h	/^       float pkt_delay;                                       \/\/packet transmit delay$/;"	m	struct:sw_port
pkt_len	packet.h	/^      len_t     	pkt_len;                             \/* Payload Length *\/$/;"	m	struct:flbfly_packet
pkt_len	packet.h	/^    len_t     	pkt_len;                             \/* Payload Length *\/$/;"	m	struct:hld_dms_packet
pkt_len	packet.h	/^    len_t     	pkt_len;                             \/* Payload Length *\/$/;"	m	struct:src_addr_packet
pkt_list	common.h	/^	struct pkt_list pkt_list;$/;"	m	struct:universal_unicast_pkth_desc	typeref:struct:universal_unicast_pkth_desc::pkt_list
pkt_list	common.h	/^struct pkt_list{$/;"	s
pkt_type	common.h	53;"	d
pkt_type_desc	common.h	/^typedef enum pkt_type_desc{$/;"	g
pkt_type_t	common.h	/^}pkt_type_t;$/;"	t	typeref:enum:pkt_type_desc
pkt_vc	common.h	/^	num_t     pkt_vc;                  \/* Virtual Channel ID*\/$/;"	m	struct:fc_pkth_desc
pkth_to_pkt	common.h	65;"	d
port	parser.h	/^    x_port_t port[MAX_NIC_PORT];	\/\/port information$/;"	m	struct:__anon18
port	parser.h	/^    x_port_t port[MAX_SW_PORT];$/;"	m	struct:__anon19
port	parser.h	/^    x_port_t port[MAX_SW_PORT];$/;"	m	struct:__anon20
port	universal_nic.h	/^   struct nic_port port[NIC_XPORT_NUM];                  \/* NIC port declaration *\/$/;"	m	struct:nic	typeref:struct:nic::nic_port
port	universal_router.h	/^	struct router_port port [ROUTER_XPORT_NUM];                   \/* router port declaration *\/$/;"	m	struct:router	typeref:struct:router::router_port
port	universal_sw.h	/^	struct sw_port port [SW_XPORT_NUM];                   \/* sw port declaration *\/$/;"	m	struct:sw	typeref:struct:sw::sw_port
port_id	universal_nic.h	/^   id_t port_id;                                         \/* nic port index *\/$/;"	m	struct:nic_port
port_id	universal_router.h	/^       id_t port_id;                                          \/* router port index *\/$/;"	m	struct:router_port
port_id	universal_sw.h	/^       id_t port_id;                                          \/* sw port index *\/$/;"	m	struct:sw_port
port_ptr	parser.h	/^    x_port_t *port_ptr[MAX_LEVEL_PORT]; \/\/port information$/;"	m	struct:levnd_desc_t
priority	universal_nic.h	/^   int   priority[NIC_XVC_NUM];$/;"	m	struct:nic_port
priority	universal_router.h	/^       int   priority[ROUTER_XVC_NUM];$/;"	m	struct:router_port
priority	universal_sw.h	/^       int   priority[SW_XVC_NUM];$/;"	m	struct:sw_port
priority_port	universal_nic.h	/^   int   priority_port;$/;"	m	struct:nic
priority_port	universal_router.h	/^	int   priority_port;$/;"	m	struct:router
priority_port	universal_sw.h	/^	int   priority_port;$/;"	m	struct:sw
priority_vc	universal_nic.h	/^   int   priority_vc;$/;"	m	struct:nic
priority_vc	universal_router.h	/^	int   priority_vc;$/;"	m	struct:router
priority_vc	universal_sw.h	/^	int   priority_vc;$/;"	m	struct:sw
process_mig_mode	hoptions.c	/^void process_mig_mode(char *optarg)$/;"	f
process_net_type	hoptions.c	/^void process_net_type(char *optarg)$/;"	f
process_script_tick_num	hoptions.c	/^static inline void process_script_tick_num(char *optarg)$/;"	f	file:
process_thread_num	hoptions.c	/^static inline void process_thread_num(char *optarg)$/;"	f	file:
process_trace_num	hoptions.c	/^static inline void process_trace_num(char *optarg)$/;"	f	file:
process_trace_type	hoptions.c	/^void process_trace_type(char *optarg)$/;"	f
queue	universal_nic.h	/^   Q_t queue;$/;"	m	struct:nic_mlist
queue	universal_router.h	/^        Q_t queue;$/;"	m	struct:router_mlist
queue	universal_sw.h	/^        Q_t queue;$/;"	m	struct:sw_mlist
r_m	parser.c	/^    int r_m;$/;"	m	struct:__anon7	file:
recv_fifo	universal_nic.h	/^   struct nic_mlist recv_fifo[NIC_XVC_NUM];              \/* Input fifo, its tick is the schedule tick, neither head nor tail *\/$/;"	m	struct:nic_port	typeref:struct:nic_port::nic_mlist
recv_fifo	universal_router.h	/^       struct router_mlist recv_fifo[ROUTER_XVC_NUM];                 \/* Input fifo, its tick is the schedule tick, neither head nor tail *\/$/;"	m	struct:router_port	typeref:struct:router_port::router_mlist
recv_fifo	universal_sw.h	/^       struct sw_mlist recv_fifo[SW_XVC_NUM];                 \/* Input fifo, its tick is the schedule tick, neither head nor tail *\/$/;"	m	struct:sw_port	typeref:struct:sw_port::sw_mlist
release_resource	parser.c	/^void release_resource()$/;"	f
remote	parser.h	/^    int remote;		\/\/remote port number, the number port connected to $/;"	m	struct:__anon17
router	universal_router.h	/^       struct router *router;$/;"	m	struct:router_port	typeref:struct:router_port::router
router	universal_router.h	/^struct router {$/;"	s
router_data_init	universal_router.c	/^static void router_data_init(router_desc_t * router_desc, struct router *router)$/;"	f	file:
router_desc	parser.c	/^router_desc_t *router_desc = NULL;$/;"	v
router_desc_t	parser.h	/^} router_desc_t;$/;"	t	typeref:struct:__anon20
router_get_lookahead	universal_router.c	/^static htime_t router_get_lookahead(void *vrouter, cid_t cid)$/;"	f	file:
router_get_max	universal_router.c	/^htime_t router_get_max(htime_t a, htime_t b, htime_t c)$/;"	f
router_get_nexthop_portvc	router_algo_user.c	/^void router_get_nexthop_portvc(struct router *router, unicast_pkth_t *pkth, id_t src_port)$/;"	f
router_get_positive	universal_router.c	/^htime_t router_get_positive(htime_t a, htime_t b)$/;"	f
router_handle_unicast	router_algo_frame.c	/^bool router_handle_unicast(struct router *router, void *mini_pkt, id_t src_id, htime_t mini_tick)$/;"	f
router_init	universal_router.c	/^void router_init(void *router_desc_ptr)$/;"	f
router_mlist	universal_router.h	/^struct router_mlist {$/;"	s
router_output_arbiter	universal_router.c	/^static inline void *router_output_arbiter(struct router *router, id_t * port_id, htime_t * mini_tick, bool priority_change)	\/\/ this  is  a  vc_num*port_num  x  vc_num*port_num  crossbar$/;"	f	file:
router_port	universal_router.h	/^struct router_port {$/;"	s
router_port_num	parser.c	/^int router_port_num;$/;"	v
router_port_num	universal_router.h	/^	num_t  router_port_num;                                   \/* Number of interfaces with router\/SW *\/$/;"	m	struct:router
router_port_number	parser.c	/^    int router_port_number;$/;"	m	struct:__anon8	file:
router_port_recv_pkt	router_algo_frame.c	/^void router_port_recv_pkt(void *vport, void *pkt, int current_port)$/;"	f
router_port_run	universal_router.c	/^static run_ret_t router_port_run(void *vrouter)$/;"	f	file:
router_send_packet_out	router_algo_frame.c	/^static inline htime_t router_send_packet_out(struct router *router, void *pkt, num_t src_id, num_t dst_id, htime_t mini_tick, bool fc_en, bool stat_en)$/;"	f	file:
router_update_flowcontrol	universal_router.c	/^static inline void router_update_flowcontrol(struct router *router)$/;"	f	file:
router_vc_num	universal_router.h	/^	num_t  router_vc_num;$/;"	m	struct:router
router_vc_num	universal_router.h	/^       int router_vc_num;$/;"	m	struct:router_port
router_vcnum	parser.c	/^    int router_vcnum;$/;"	m	struct:__anon5	file:
routernum	universal_router.h	/^	num_t  routernum;$/;"	m	struct:router
select_minimum_pkt	universal_router.c	/^static inline bool select_minimum_pkt(struct router *router)$/;"	f	file:
select_minimum_pkt	universal_sw.c	/^static inline bool select_minimum_pkt(struct sw *sw)$/;"	f	file:
set_pkt_tick	common.h	/^static inline void set_pkt_tick(void *pkt, htime_t tick)$/;"	f
sflbfly_param	parser.c	/^} sflbfly_param;$/;"	v	typeref:struct:__anon10	file:
sflbfly_read_file	parser.c	/^void sflbfly_read_file()$/;"	f
src_addr	packet.h	/^      mem_addr_t 	src_addr;$/;"	m	struct:flbfly_packet
src_addr	packet.h	/^    mem_addr_t 	src_addr;$/;"	m	struct:hld_dms_packet
src_addr	packet.h	/^    mem_addr_t 	src_addr;$/;"	m	struct:src_addr_packet
src_addr_packet	packet.h	/^typedef struct src_addr_packet{$/;"	s
src_addr_packet_t	packet.h	/^}src_addr_packet_t;$/;"	t	typeref:struct:src_addr_packet
src_port	packet.h	/^    usi     	src_port[MAX_STAGE];$/;"	m	struct:src_addr_packet
src_vc	packet.h	/^    usi     	src_vc[MAX_STAGE];$/;"	m	struct:src_addr_packet
stage_delay	common.h	/^	usi stage_delay[2];$/;"	m	struct:universal_unicast_pkth_desc
stage_delay	packet.h	/^      float     	stage_delay[MAX_STAGE];		     \/* Statistic information for delay *\/$/;"	m	struct:flbfly_packet
stage_delay	packet.h	/^    float     	stage_delay[MAX_STAGE];		     \/* Statistic information for delay *\/$/;"	m	struct:hld_dms_packet
stage_delay	packet.h	/^    float     	stage_delay[MAX_STAGE];		     \/* Statistic information for delay *\/$/;"	m	struct:src_addr_packet
stage_delay	universal_nic.h	/^   float stage_delay[MAX_STAGE];				\/*every hop delay*\/$/;"	m	struct:nic
strategy_id	packet.h	/^    usi		strategy_id;$/;"	m	struct:hld_dms_packet
sw	universal_sw.h	/^       struct sw *sw;$/;"	m	struct:sw_port	typeref:struct:sw_port::sw
sw	universal_sw.h	/^struct sw {$/;"	s
sw_bus_width	parser.c	/^    int sw_bus_width;$/;"	m	struct:__anon5	file:
sw_confg_regiser_create	sw_config_register.c	/^void sw_confg_regiser_create(int swnum)$/;"	f
sw_confg_register_init	sw_config_register.c	/^void sw_confg_register_init(sw_config_register * rgs, int index,int *dms)$/;"	f
sw_config_register	sw_config_register.h	/^typedef sw_config_register_alltoall sw_config_register;$/;"	t
sw_config_register	sw_config_register.h	/^typedef sw_config_register_d7k sw_config_register;$/;"	t
sw_config_register	sw_config_register.h	/^typedef sw_config_register_flbfly sw_config_register;$/;"	t
sw_config_register	sw_config_register.h	/^typedef sw_config_register_ftree sw_config_register;$/;"	t
sw_config_register	sw_config_register.h	/^typedef sw_config_register_mesh sw_config_register;$/;"	t
sw_config_register	sw_config_register.h	/^typedef sw_config_register_torus sw_config_register;$/;"	t
sw_config_register_alltoall	sw_config_register.h	/^}sw_config_register_alltoall;$/;"	t	typeref:struct:__anon26
sw_config_register_d7k	sw_config_register.h	/^}sw_config_register_d7k;$/;"	t	typeref:struct:__anon21
sw_config_register_flbfly	sw_config_register.h	/^}sw_config_register_flbfly;$/;"	t	typeref:struct:__anon25
sw_config_register_ftree	sw_config_register.h	/^}sw_config_register_ftree;$/;"	t	typeref:struct:__anon22
sw_config_register_mesh	sw_config_register.h	/^}sw_config_register_mesh;$/;"	t	typeref:struct:__anon23
sw_config_register_torus	sw_config_register.h	/^}sw_config_register_torus;$/;"	t	typeref:struct:__anon24
sw_crgs	sw_config_register.c	/^sw_config_register * sw_crgs = NULL;$/;"	v
sw_data_init	universal_sw.c	/^static void sw_data_init(sw_desc_t * sw_desc, struct sw *sw)$/;"	f	file:
sw_desc	parser.c	/^sw_desc_t *sw_desc = NULL;$/;"	v
sw_desc_t	parser.h	/^} sw_desc_t;$/;"	t	typeref:struct:__anon19
sw_frequency	parser.c	/^    int sw_frequency;$/;"	m	struct:__anon5	file:
sw_get_lookahead	universal_sw.c	/^static htime_t sw_get_lookahead(void *vsw, cid_t cid)$/;"	f	file:
sw_get_max	universal_sw.c	/^htime_t sw_get_max(htime_t a, htime_t b, htime_t c)$/;"	f
sw_get_nexthop_portvc	sw_algo_user.c	/^void sw_get_nexthop_portvc(struct sw *sw, unicast_pkth_t *pkth, id_t src_port)$/;"	f
sw_get_positive	universal_sw.c	/^htime_t sw_get_positive(htime_t a, htime_t b)$/;"	f
sw_handle_unicast	sw_algo_frame.c	/^bool sw_handle_unicast(struct sw *sw, void *mini_pkt, id_t src_id, htime_t mini_tick)$/;"	f
sw_init	universal_sw.c	/^void sw_init(void *sw_desc_ptr)$/;"	f
sw_mlist	universal_sw.h	/^struct sw_mlist {$/;"	s
sw_output_arbiter	universal_sw.c	/^static inline void *sw_output_arbiter(struct sw *sw, id_t * port_id, htime_t * mini_tick, bool priority_change)	\/\/ this  is  a  vc_num*port_num  x  vc_num*port_num  crossbar$/;"	f	file:
sw_port	universal_sw.h	/^struct sw_port {$/;"	s
sw_port_num	universal_sw.h	/^	num_t  sw_port_num;                                   \/* Number of interfaces with sw\/SW *\/$/;"	m	struct:sw
sw_port_number	parser.c	/^    int sw_port_number;$/;"	m	struct:__anon8	file:
sw_port_recv_pkt	sw_algo_frame.c	/^void sw_port_recv_pkt(void *vport, void *pkt, int current_port)$/;"	f
sw_port_run	universal_sw.c	/^static run_ret_t sw_port_run(void *vsw)$/;"	f	file:
sw_send_packet_out	sw_algo_frame.c	/^static inline htime_t sw_send_packet_out(struct sw *sw, void *pkt, num_t src_id, num_t dst_id, htime_t mini_tick, bool fc_en, bool stat_en)$/;"	f	file:
sw_update_flowcontrol	universal_sw.c	/^static inline void sw_update_flowcontrol(struct sw *sw)$/;"	f	file:
sw_vc_num	universal_sw.h	/^	num_t  sw_vc_num;$/;"	m	struct:sw
sw_vc_num	universal_sw.h	/^       int sw_vc_num;$/;"	m	struct:sw_port
sw_vcnum	parser.c	/^    int sw_vcnum;$/;"	m	struct:__anon5	file:
swnum	universal_sw.h	/^	num_t  swnum;$/;"	m	struct:sw
thread_binding	hoptions.h	/^    bool thread_binding;$/;"	m	struct:__anon4
thread_num	hoptions.h	/^    int thread_num;$/;"	m	struct:__anon4
tick	universal_nic.h	/^   htime_t tick;					 \/*time stamp of nic*\/$/;"	m	struct:nic
tick	universal_nic.h	/^   htime_t tick;                                         \/* tick for output *\/$/;"	m	struct:nic_port
tick	universal_nic.h	/^   htime_t tick;$/;"	m	struct:nic_mlist
tick	universal_router.h	/^	htime_t tick;$/;"	m	struct:router
tick	universal_router.h	/^        htime_t tick;$/;"	m	struct:router_mlist
tick	universal_router.h	/^       htime_t tick;                                          \/* tick for output *\/$/;"	m	struct:router_port
tick	universal_sw.h	/^	htime_t tick;$/;"	m	struct:sw
tick	universal_sw.h	/^        htime_t tick;$/;"	m	struct:sw_mlist
tick	universal_sw.h	/^       htime_t tick;                                          \/* tick for output *\/$/;"	m	struct:sw_port
to_nic	packet.h	/^      usi		to_nic;$/;"	m	struct:flbfly_packet
to_nic	packet.h	/^    usi		to_nic;$/;"	m	struct:hld_dms_packet
topo_level	parser.c	/^int topo_level = 0;$/;"	v
topo_map	parser.c	/^int ***topo_map = NULL;\/\/$/;"	v
tor_ft_param	parser.c	/^}tor_ft_param;$/;"	v	typeref:struct:__anon7	file:
torport	parser.c	/^    int torport; \/\/top of router port number;$/;"	m	struct:__anon15	file:
torus_param	parser.c	/^}torus_param;$/;"	v	typeref:struct:__anon12	file:
torus_read_file	parser.c	/^void torus_read_file(FILE * fcfg)$/;"	f
torus_route_table	sw_algo_user.c	/^unsigned int torus_route_table[8]=$/;"	v
trace_create	universal_nic.c	/^void inline trace_create(struct nic * nic)$/;"	f
trace_nic	universal_nic.c	/^static inline void trace_nic(struct nic * nic)$/;"	f	file:
trace_num	hoptions.h	/^    int trace_num;$/;"	m	struct:__anon4
trace_type	hoptions.h	/^    trace_type_t trace_type;$/;"	m	struct:__anon4
trace_type_t	hoptions.h	/^typedef enum { TRACE_FILE = 0, INNER_UNIFORM, INNER_RANDOM, INNER_BIT, INNER_SHUF, INNER_HOT } trace_type_t;$/;"	t	typeref:enum:__anon3
trans_fifo	universal_nic.h	/^   struct nic_mlist trans_fifo;                          \/* Output fifo, its tick is the tail's tick *\/$/;"	m	struct:nic_port	typeref:struct:nic_port::nic_mlist
trans_fifo	universal_router.h	/^       struct router_mlist trans_fifo;                            \/* Output fifo, its tick is the tail's tick *\/$/;"	m	struct:router_port	typeref:struct:router_port::router_mlist
trans_fifo	universal_sw.h	/^       struct sw_mlist trans_fifo;                            \/* Output fifo, its tick is the tail's tick *\/$/;"	m	struct:sw_port	typeref:struct:sw_port::sw_mlist
unicast_pkth_t	packet.h	/^typedef flbfly_packet_t unicast_pkth_t;$/;"	t
unicast_pkth_t	packet.h	/^typedef hld_dms_packet_t unicast_pkth_t;$/;"	t
unicast_pkth_t	packet.h	/^typedef src_addr_packet_t unicast_pkth_t;$/;"	t
universal_addr_uni	nic_algo_user.c	/^void universal_addr_uni(unsigned int *dst,struct nic * nic)$/;"	f
universal_adjust_recv_fifo_tick	nic_algo_frame.c	/^static inline void universal_adjust_recv_fifo_tick(struct nic *nic, num_t vc, id_t src_id, id_t dst, htime_t tick, len_t len)$/;"	f	file:
universal_fill_fc_packet	nic_algo_frame.c	/^static inline void universal_fill_fc_packet(void *pkt, num_t vc, htime_t tick, len_t credit)$/;"	f	file:
universal_nic_assum_pkt	nic_algo_frame.c	/^static inline void universal_nic_assum_pkt(struct nic *nic, void *pkt)$/;"	f	file:
universal_nic_calc_route	nic_algo_user.c	/^void universal_nic_calc_route(struct nic*nic, unicast_pkth_t*pkth, unsigned int dst, unsigned int src)$/;"	f
universal_nic_calc_route	nic_algo_user.c	/^void universal_nic_calc_route(struct nic*nic, unicast_pkth_t*pkth, unsigned int dst_real, unsigned int src_real)$/;"	f
universal_nic_form_nic_packet	nic_algo_frame.c	/^void universal_nic_form_nic_packet(void *vport, void *pkt, int current_vc)$/;"	f
universal_nic_get_lookahead	universal_nic.c	/^static htime_t universal_nic_get_lookahead(void *vnic, cid_t cid)$/;"	f	file:
universal_nic_get_max	universal_nic.c	/^htime_t universal_nic_get_max(htime_t a, htime_t b, htime_t c)$/;"	f
universal_nic_get_positive	universal_nic.c	/^htime_t universal_nic_get_positive(htime_t a, htime_t b)$/;"	f
universal_nic_getout_port	nic_algo_user.c	/^void universal_nic_getout_port(struct nic_port *port, unicast_pkth_t* pkth)$/;"	f
universal_nic_handle_unicast	nic_algo_frame.c	/^bool universal_nic_handle_unicast(struct nic *nic, void *mini_pkt, id_t src_id)$/;"	f
universal_nic_make_unicast_pkt	nic_algo_frame.c	/^pkt_ptr_t universal_nic_make_unicast_pkt(struct nic *nic,int current_vc)$/;"	f
universal_nic_output_arbiter	universal_nic.c	/^static inline void * universal_nic_output_arbiter(struct nic *nic, id_t *port_id, htime_t *mini_tick, bool priority_change)\/\/this is a vc_num*port_num x vc_num*port_num crossbar$/;"	f	file:
universal_nic_port_recv_pkt	nic_algo_frame.c	/^void universal_nic_port_recv_pkt(void *vport, void *pkt)$/;"	f
universal_nic_port_run	universal_nic.c	/^static run_ret_t universal_nic_port_run(void *vnic)$/;"	f	file:
universal_nic_recv_pkt	universal_nic.c	/^static inline void universal_nic_recv_pkt(struct nic *nic)$/;"	f	file:
universal_nic_send_packet_out	nic_algo_frame.c	/^static inline void universal_nic_send_packet_out(struct nic *nic, void *pkt, num_t src_id, num_t dst_id, bool fc_en)$/;"	f	file:
universal_nic_send_pkt_dispose	nic_algo_user.c	/^void universal_nic_send_pkt_dispose(struct nic *nic, unicast_pkth_t *netpkth)$/;"	f
universal_param	parser.c	/^}universal_param;$/;"	v	typeref:struct:__anon14	file:
universal_param_config	parser.c	/^void universal_param_config()$/;"	f
universal_router_getout_port	router_algo_user.c	/^void universal_router_getout_port(struct router_port *port,unicast_pkth_t *netpkth, int current_port)$/;"	f
universal_router_recv_pkt	universal_router.c	/^static inline void universal_router_recv_pkt(struct router *router)$/;"	f	file:
universal_router_send_pkt_dispose	router_algo_user.c	/^void universal_router_send_pkt_dispose(struct router *router, unicast_pkth_t *netpkth)$/;"	f
universal_select_minimum_pkt	universal_nic.c	/^bool universal_select_minimum_pkt(struct nic *nic)$/;"	f
universal_set_compt_tick	universal_nic.c	/^void universal_set_compt_tick(compt_id_t id, htime_t tick) $/;"	f
universal_sw_getout_port	sw_algo_user.c	/^void universal_sw_getout_port(struct sw_port *port,unicast_pkth_t *netpkth, int current_port)$/;"	f
universal_sw_recv_pkt	universal_sw.c	/^static inline void universal_sw_recv_pkt(struct sw *sw)$/;"	f	file:
universal_sw_send_pkt_dispose	sw_algo_user.c	/^void universal_sw_send_pkt_dispose(struct sw *sw, unicast_pkth_t *netpkth)$/;"	f
universal_tick_num	hoptions.h	/^    int universal_tick_num;$/;"	m	struct:__anon4
universal_unicast_pkth_desc	common.h	/^typedef struct universal_unicast_pkth_desc{$/;"	s
universal_unicast_pkth_t	common.h	/^	}universal_unicast_pkth_t;$/;"	t	typeref:struct:universal_unicast_pkth_desc
universal_update_flowcontrol	universal_nic.c	/^static inline void universal_update_flowcontrol(struct nic *nic)$/;"	f	file:
usage	hoptions.c	/^void usage(char *name)$/;"	f
usi	packet.h	/^typedef unsigned long int usi;$/;"	t
vc_allocated	universal_nic.h	/^   num_t vc_allocated;$/;"	m	struct:nic
vcnum	parser.h	/^    int vcnum;				\/\/vc number$/;"	m	struct:__anon18
vcnum	parser.h	/^    int vcnum;				\/\/vc number$/;"	m	struct:__anon19
vcnum	parser.h	/^    int vcnum;$/;"	m	struct:__anon20
version	hoptions.c	/^void version()$/;"	f
vtor_ft_param	parser.c	/^}vtor_ft_param;$/;"	v	typeref:struct:__anon8	file:
whole_id	parser.h	/^    int whole_id;			\/\/level node global number$/;"	m	struct:levnd_desc_t
x_id	sw_config_register.h	/^    int  x_id[5];$/;"	m	struct:__anon21
x_id	sw_config_register.h	/^    int  x_id[5];$/;"	m	struct:__anon23
x_id	sw_config_register.h	/^    int  x_id[5];$/;"	m	struct:__anon24
x_id	sw_config_register.h	/^    int x_id[MAX_FLY];$/;"	m	struct:__anon25
x_port_t	parser.h	/^} x_port_t;$/;"	t	typeref:struct:__anon17
xn_pd	sw_config_register.h	/^    unsigned int xn_pd[5];$/;"	m	struct:__anon21
xp_pd	sw_config_register.h	/^    unsigned int xp_pd[5];$/;"	m	struct:__anon21
xy_direc	parser.c	/^int *xy_direc = NULL;	\/\/$/;"	v
xyz	parser.c	/^int xyz;		\/\/global dimension number$/;"	v
